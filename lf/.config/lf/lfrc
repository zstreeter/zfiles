# Zach's lf settings

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# Basic Settings
set relativenumber
set hidden true
set ignorecase true
set icons true
set drawbox true
set shell zsh
set shellopts '-euy'
set ifs "\n"
set filesep "\n"  # default already
set cursorpreviewfmt "\033[7m"

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# cmds/functions
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) localc $fx ;;
	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
        text/*|application/json|inode/x-empty|application/x-subrip) $EDITOR $fx;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|avif\|tif\|ico\)\(_large\)*$" |
		setsid -f nsxiv -aio 2>/dev/null | while read -r file; do
			[ -z "$file" ] && continue
			lf -remote "send select \"$file\""
			lf -remote "send toggle"
		done &
		;;
	audio/*|video/x-ms-asf) mpv --audio-display=no $f ;;
	video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd.djvu|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
	application/pgp-encrypted) $EDITOR $fx ;;
	application/vnd.openxmlformats-officedocument.wordprocessingml.document|application/vnd.oasis.opendocument.text|application/vnd.openxmlformats-officedocument.spreadsheetml.sheet|application/octet-stream|application/vnd.oasis.opendocument.spreadsheet|application/vnd.oasis.opendocument.spreadsheet-template|application/vnd.openxmlformats-officedocument.presentationml.presentation|application/vnd.oasis.opendocument.presentation-template|application/vnd.oasis.opendocument.presentation|application/vnd.ms-powerpoint|application/vnd.oasis.opendocument.graphics|application/vnd.oasis.opendocument.graphics-template|application/vnd.oasis.opendocument.formula|application/vnd.oasis.opendocument.database) setsid -f libreoffice $fx >/dev/null 2>&1 ;;
        *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

#cmd setwallpaper ${{
#    cp "$f" ~/.config/wall.jpg
#    xwallpaper --zoom "$f"
#    betterlockscreen -u "$f" --fx
#}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

## Trash bindings
#cmd trash ${{
#  files=$(printf "$fx" | tr '\n' ';')
#  while [ "$files" ]; do
#    file=${files%%;*}
#
#    trash-put "$(basename "$file")"
#    if [ "$files" = "$file" ]; then
#      files=''
#    else
#      files="${files#*;}"
#    fi
#  done
#}}
#map dd trash

cmd restore_trash ${{
  trash-restore
}}

# Bindings
map d
map m

map c $vscodium "$f"

map au unarchive
map ae $wine "$f"

# Basic Functions
map . set hidden!
map D delete
map dr restore_trash
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
map C clear
#map bg setwallpaper

# Movement
map gD cd ~/documents
map gd cd ~/downloads
map gp cd ~/pictures
map gc cd ~/.config
map gr cd ~/repos
map gv cd ~/videos
map gs cd ~/.local/bin
map gt cd ~/.local/share/Trash/files
